{
    "url": "/graphql",
    "method": "POST",
    "body": {
        "query": "query { storePurchases(per: 1000) { nodes { purchasedCourse { policyLocation polymorphicId published publishedAt retired retiringSoon storeItemType storeItemUuid title trainingCampaignBadge updatedAt uploaded userHasToAcknowledgePolicy } purchasedCourseId storeItemUuid } pagination { page pages per totalCount } }}"
    },
    "response": {
        "iterate": "{{body.data.storePurchases.nodes}}",
        "output": {
            "label": "{{item.purchasedCourse.title}}",
            "value": "{{item.purchasedCourse.polymorphicId}}"
        }
    },
    "pagination": {
        "mergeWithParent": true,
        "body": {
            "query": "query StorePurchases($page: Int) { storePurchases(page: $page, per: 1000) { nodes { purchasedCourse { policyLocation polymorphicId published publishedAt retired retiringSoon storeItemType storeItemUuid title trainingCampaignBadge updatedAt uploaded userHasToAcknowledgePolicy } purchasedCourseId storeItemUuid } pagination { page pages per totalCount } }}",
            "variables": {
                "page": "{{body.data.storePurchases.pagination.page + 1}}"
            }
        },
        "condition": "{{body.data.storePurchases.pagination.page < body.data.storePurchases.pagination.pages}}"
    }
}